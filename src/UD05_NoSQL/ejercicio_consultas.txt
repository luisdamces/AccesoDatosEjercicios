////////////////////////////
//EJERCICIOS CONSULTAS/////
///////////////////////////
-Consultar el identificador de equipo de Los Angeles Lakers y crear otra consulta para ver los jugadores de dicho equipo.

	db.equipos.find({"fullName" : "Los Angeles Lakers"}, {"teamId" : 1}).pretty()
	db.jugadores.find({"teamId" : "1610612739"}).pretty()

-Consultar los jugadores españoles

	db.jugadores.find({"country" : "Spain"}).pretty()

-Consultar los jugadores que miden más de 2.10 metros.

	db.jugadores.find({"heightMeters" : {$gt : "2.10"}}).sort({"heightMeters" : -1}).pretty()

-Consultar el número de jugadores de cada posición.

	db.jugadores.count({"pos" : "C"})
	db.jugadores.count({"pos" : "F-C"})
	...

-Consultar los equipos que son franquicias NBA.

	db.equipos.find({"isNBAFranchise" : true}).pretty()
	---------------------------------------------------
	db.equipos.find({$or : [{"confName" : "West"}, {"confName" : "East"}]}).pretty()

-Consultar los equipos de la conferencia Oeste.

	db.equipos.find({"confName" : "West"}).pretty()

-Consultar los entrenadores principales, isAssistant: false

	db.entrenadores.find({"isAssistant" : false}).pretty()

-Jugadores que han jugador en los Lakers pero no están jugando ahí

	db.jugadores.find({ "teamId": {$ne:"1610612747"}, "teams":{$elemMatch:{"teamId":"1610612747"}}} ).pretty()

-Jugadores cuyo pickNum es 1

	db.jugadores.find({"draft.pickNum":{$eq:"1"}}).pretty()

////////////////////////////
//EJERCICIOS AGREGACIÓN////
///////////////////////////	
-Jugadores de los Lakers con sus nombres en mayúsculas

	db.jugadores.aggregate([{"$project":{"firstName" : 1, "lastName":{"$toUpper":"$lastName"}, "teamId" : 1}}, {"$match" : {"teamId" : "1610612747"}}]).pretty()

-Altura media y peso medio de los jugadores por cada equipo de la NBA.

	db.jugadores.aggregate([{$project:{"teamId": 1, "heightMeters" : 1, "weightKilograms" : 1}}, {$group:{_id : "$teamId", "avgHeight" : {$avg : {$toDouble : "$heightMeters"}}, "avgWeight" : {$avg : {$toDouble : "$weightKilograms"}}}}])

-Nombre del jugador que más años lleva en la NBA.

	db.jugadores.aggregate([{$match: {"nbaDebutYear": {$ne: ""}}}, {$project: {"nbaDebutYear": {$toInt: "$nbaDebutYear"}, "firstName": "$firstName"}}, {$group: {_id: null,"nbaDebutYear": {$min: "$nbaDebutYear"}}}])

-Partidos en los que el equipo visitante ha metido más de 100 puntos y no ha ganado.

	db.calendario.aggregate([{$project: {
  "vTeam.score" : {$toInt : "$vTeam.score"},
  "vTeam.loss" : 1,
  "vTeam.teamId" : 1,
  "vTeam.win" : 1
}}, {$match: 
{
  "vTeam.score" : {$gt: 100},
  "vTeam.loss" : "1",
}}])

-Nombre, apellidos y Edad en años de los jugadores, grabar el resultado en una colección nueva llamada jugadores_edad.

-Nombre, Apellido y posición del jugador de mayor y menor edad de la NBA.

-Paises de procedencia de los jugadores. Ordenar alfabéticamente.

	db.jugadores.aggregate([{$group: {
  _id: "$country",
}}, {$sort: {
  _id: 1
}}])

-Mostrar los jugadores que han estado en más equipos en su carrera. Limitar a 15 registros el resultado.

	db.jugadores.aggregate([{$project: {
  firstName : 1,
  lastName : 1,
  "numberTeams" : {$size : "$teams"}
}}, {$sort: {
  "numberTeams": -1
}}, {$limit: 15}])
